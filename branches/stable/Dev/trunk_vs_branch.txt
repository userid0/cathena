<<<<<<< .mine
- This is a small summary of the roles of trunk vs a branch, as well as their
  current state in eA. 

- Trunk: This should be the base source-codebase, well all the flashy lights
  and new enhacements get added. It gets updated a lot, breaks often.

- Current situation: Noone works on trunk anymore and it's seriously outdated.


- Branch: This should be a snapshot of the trunk at some given time, and
  receives no enhancements at all, only bug fixes. Once the branch becomes
  stable enough, it is "released" to the public with an appropiate version
  number, and the next branch is created from a new snapshot from the trunk.

- Current situation: Everyone is working on branches/stable s if it were a
  stable + development source.

As Akaru has pointed out, we need to sort this out inmediately:
- branches/stable must be moved and become the new trunk/
- We should probably make a branch snapshot from a few days ago (before the
  latest feature additions like string permanent variables?) for next release
  base.
- All devs should stick to the roles of branch/trunk.
- It appears most devs who have heard of this agree with Akaru, however the
  initial steps to clean up the SVN repository have yet to be taken. This task
  seems assigned to Kayla, maintainer of said repository.

Post your thoughts/ideas about here...
- [Skotlex] I think fixing skills counts as bug fixing, and goes to branch.
  But implementing missing skills should go to trunk.
- [Lance] Now who's in charge of merging back fixes from the stable -> trunk and vise versa=======
- This is a small summary of the roles of trunk vs a branch, as well as their
  current state in eA. 

- Trunk: This should be the base source-codebase, well all the flashy lights
  and new enhacements get added. It gets updated a lot, breaks often.

- Current situation: Noone works on trunk anymore and it's seriously outdated.


- Branch: This should be a snapshot of the trunk at some given time, and
  receives no enhancements at all, only bug fixes. Once the branch becomes
  stable enough, it is "released" to the public with an appropiate version
  number, and the next branch is created from a new snapshot from the trunk.

- Current situation: Everyone is working on branches/stable s if it were a
  stable + development source.

As Akaru has pointed out, we need to sort this out inmediately:
- branches/stable must be moved and become the new trunk/
- We should probably make a branch snapshot from a few days ago (before the
  latest feature additions like string permanent variables?) for next release
  base.
- All devs should stick to the roles of branch/trunk.
- It appears most devs who have heard of this agree with Akaru, however the
  initial steps to clean up the SVN repository have yet to be taken. This task
  seems assigned to Kayla, maintainer of said repository.

Post your thoughts/ideas about here...
- [Skotlex] I think fixing skills counts as bug fixing, and goes to branch.
  But implementing missing skills should go to trunk.

* Have you read this? http://eathena.ws/board/index.php?showtopic=65827
At least one of dev seems to agree with me(on irc) that we don't have enough resources(on devs or testers) to do trunk/stable.
simply.
1. who's going to test trunk? if no one is gonna test it, and bugs slips into stable... what's the point. good example would be whole guild cache. i'm sure it worked fine on kevin's setting. but when lots of people tested, in various settings, we found out how broke it was.
2. who's gonna manage trunk->stable transfer? and when? as you know, there always will be some bug... it's like whole eA 1.0 thing. There is always something to fix. It was never quite "stable" enough to do "stable" release. so trunk is gonna be our current stable branch, except even more broken... great. :o
imo, eA is fine as is.
and if you REALLY want to dev, should be 3 branches.
dev: where you commit things. broken often. do-whatever-dev-wants
trunk/"testing": things that are "complete," but needs testing. primary bug fixes
stable: the release. should be almost no bugs. shouldn't need update, unless it's critical update.

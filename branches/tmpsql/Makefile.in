# Based on Makefile.in of $Revision$

@SET_MAKE@

CC = @CC@ -pipe
CFLAGS = @CFLAGS@ -ffast-math -Wall -Wno-sign-compare
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
CPPFLAGS = @CPPFLAGS@ -I../common

HAVE_MYSQL = @HAVE_MYSQL@
MYSQL_VERSION = @MYSQL_VERSION@
MYSQL_CFLAGS = @MYSQL_CFLAGS@
MYSQL_LIBS = @MYSQL_LIBS@

HAVE_PCRE = @HAVE_PCRE@
PCRE_CFLAGS = @PCRE_CFLAGS@
PCRE_LIBS = @PCRE_LIBS@

# Detecting gcc version
GCC_VERSION = $(shell $(CC) -v 2>&1 | grep version | cut -d' ' -f3  | cut -d'.' -f1)
ifeq ($(GCC_VERSION), 4)
	CFLAGS += -Wno-unused-parameter -Wno-pointer-sign
endif

# Server Packet Protocol version (also defined in src/common/mmo.h)
# CFLAGS += -DPACKETVER=8

# Makes map-wide script variables be saved to SQL instead of TXT files.
# CFLAGS += -DMAPREGSQL

ifdef HAVE_PCRE
	CFLAGS += $(PCRE_CFLAGS)
	LIBS += $(PCRE_LIBS)
endif

# OPT += -O3
# OPT += -mmmx
# OPT += -msse
# OPT += -msse2
# OPT += -msse3
# OPT += -rdynamic
# OPT += -ffast-math
# OPT += -fbounds-checking
# OPT += -fstack-protector
# OPT += -fomit-frame-pointer
# OPT += -Wall -Wno-sign-compare
# Server Packet Protocol version (also defined in src/common/mmo.h)
# OPT += -DPACKETVER=8
# Makes map-wide script variables be saved to SQL instead of TXT files.
# OPT += -DMAPREGSQL
# Enable the perl regular expression support for scripts
# OPT += -DPCRE_SUPPORT
# OPT += -DGCOLLECT
# OPT += -DMEMWATCH
# OPT += -DDMALLOC -DDMALLOC_FUNC_CHECK
# OPT += -DBCHECK

# LIBS += -lgc
# LIBS += -ldmalloc
# LIBS += -L/usr/local/lib -lpcre

PLATFORM = $(shell uname)
ARCH = $(shell uname -m)

ifeq ($(findstring Linux,$(PLATFORM)), Linux)
   LIBS += -ldl
endif

ifeq ($(findstring SunOS,$(PLATFORM)), SunOS)
   LIBS += -lsocket -lnsl -ldl
   MAKE = gmake
endif

ifeq ($(findstring FreeBSD,$(PLATFORM)), FreeBSD)
   MAKE = gmake
   OS_TYPE = -D__FREEBSD__
endif

ifeq ($(findstring NetBSD,$(PLATFORM)), NetBSD)
   MAKE = gmake
   OS_TYPE = -D__NETBSD__
endif

ifeq ($(findstring CYGWIN,$(PLATFORM)), CYGWIN)
   OPT += -DFD_SETSIZE=4096
   OS_TYPE = -DCYGWIN
endif

ifeq ($(findstring mingw,$(shell gcc --version)), mingw)
   IS_MINGW = 1
   OS_TYPE = -DMINGW
   OPT += -DFD_SETSIZE=4096
#   CFLAGS += -I../zlib
#   LIBS += -L../../lib
   LIBS += -lws2_32
endif

CFLAGS += $(OS_TYPE)

.PHONY: txt sql common common_sql login login_sql char char_sql map map_sql ladmin converters \
	addons plugins tools clean depend

MKDEF = CC="$(CC)" CFLAGS="$(CFLAGS) $(LDFLAGS) $(CPPFLAGS)" LIB_S="$(LIBS)"

txt: conf common login char map ladmin clean_cache

conf:
	cp -r conf-tmpl conf
	cp -r save-tmpl save
	rm -rf conf/.svn conf/*/.svn save/.svn

common: src/common/GNUmakefile
	$(MAKE) -C src/common $(MKDEF) txt

login: src/login/GNUmakefile common
	$(MAKE) -C src/login $(MKDEF) txt

char: src/char/GNUmakefile common
	$(MAKE) -C src/char $(MKDEF) txt

map: src/map/GNUmakefile common
	$(MAKE) -C src/map $(MKDEF) txt

#####################################################################
ifdef HAVE_MYSQL

MKDEF_SQL = CC="$(CC)" CFLAGS="$(CFLAGS) $(MYSQL_CFLAGS) $(LDFLAGS) $(MYSQL_LDFLAGS) $(CPPFLAGS) $(MYSQL_CPPFLAGS)" LIB_S="$(LIBS) $(MYSQL_LIBS)"

sql: conf common_sql login_sql char_sql map_sql

common_sql: src/common/GNUmakefile
	$(MAKE) -C src/common $(MKDEF_SQL) sql

login_sql: src/login_sql/GNUmakefile common_sql
	$(MAKE) -C src/login_sql $(MKDEF_SQL) sql

char_sql: src/char_sql/GNUmakefile common_sql
	$(MAKE) -C src/char_sql $(MKDEF_SQL) sql

map_sql: src/map/GNUmakefile common_sql
	$(MAKE) -C src/map $(MKDEF_SQL) sql
	
converters: src/txt-converter/GNUmakefile common_sql
	$(MAKE) -C src/txt-converter $(MKDEF_SQL)

endif
#####################################################################

ladmin: src/ladmin/GNUmakefile common
	$(MAKE) -C src/$@ $(MKDEF)

plugins addons: src/plugins/GNUmakefile common
	$(MAKE) -C src/plugins $(MKDEF)

tools:
	$(MAKE) -C src/tool $(MKDEF)

clean: src/common/GNUmakefile src/login/GNUmakefile src/login_sql/GNUmakefile \
	src/char/GNUmakefile src/char_sql/GNUmakefile src/map/GNUmakefile \
	src/ladmin/GNUmakefile src/plugins/GNUmakefile src/txt-converter/GNUmakefile
	$(MAKE) -C src/common $@
	$(MAKE) -C src/login $@
	$(MAKE) -C src/login_sql $@
	$(MAKE) -C src/char $@
	$(MAKE) -C src/char_sql $@
	$(MAKE) -C src/map $@
	$(MAKE) -C src/ladmin $@
	$(MAKE) -C src/plugins $@
	$(MAKE) -C src/txt-converter $@

depend: src/common/GNUmakefile src/login/GNUmakefile src/login_sql/GNUmakefile \
	src/char/GNUmakefile src/char_sql/GNUmakefile src/map/GNUmakefile \
	src/ladmin/GNUmakefile src/plugins/GNUmakefile src/txt-converter/GNUmakefile
	cd src/common; makedepend -fGNUmakefile -pobj/ -Y. *.c; cd ../..;
	cd src/login; makedepend -DTXT_ONLY -fGNUmakefile -Y. -Y../common *.c; cd ../..;
	cd src/login_sql; makedepend -fGNUmakefile -Y. -Y../common *.c; cd ../..;
	cd src/char; makedepend -DTXT_ONLY -fGNUmakefile -Y. -Y../common *.c; cd ../..;
	cd src/char_sql; makedepend -fGNUmakefile -Y. -Y../common *.c; cd ../..;
	cd src/map; makedepend -DTXT_ONLY -fGNUmakefile -ptxtobj/ -Y. -Y../common *.c; cd ../..;
	cd src/map; makedepend -fGNUmakefile -a -psqlobj/ -Y. -Y../common *.c; cd ../..;
	cd src/ladmin; makedepend -fGNUmakefile -Y. -Y../common *.c; cd ../..;
	cd src/txt-converter; makedepend -DTXT_SQL_CONVERT -fGNUmakefile -Y. -Y../common *.c; cd ../..;
	$(MAKE) -C src/plugins $@

src/%/GNUmakefile: src/%/Makefile
	sed -e 's/$$>/$$^/' $< > $@

src/common/GNUmakefile: src/common/Makefile
src/login/GNUmakefile: src/login/Makefile
src/login_sql/GNUmakefile: src/login_sql/Makefile
src/char/GNUmakefile: src/char/Makefile
src/char_sql/GNUmakefile: src/char_sql/Makefile
src/map/GNUmakefile: src/map/Makefile
src/plugins/GNUmakefile: src/plugins/Makefile
src/ladmin/GNUmakefile: src/ladmin/Makefile
src/txt-converter/GNUmakefile: src/txt-converter/Makefile

install:	conf/%.conf conf/%.txt
	$(shell mkdir -p /opt/eathena/bin/)
	$(shell mkdir -p /opt/eathena/etc/eathena/)
	$(shell mkdir -p /opt/eathena/var/log/eathena/)
	$(shell mv save /opt/eathena/etc/eathena/save)
	$(shell mv db /opt/eathena/etc/eathena/db)
	$(shell mv conf /opt/eathena/etc/eathena/conf)
	$(shell mv npc /opt/eathena/etc/eathena/npc)
	$(shell mv log/* /opt/eathena/var/log/eathena/)
	$(shell cp *-server* /opt/eathena/bin/)
	$(shell cp ladmin /opt/eathena/bin/)
	$(shell ln -s /opt/eathena/etc/eathena/save/ /opt/eathena/bin/)
	$(shell ln -s /opt/eathena/etc/eathena/db/ /opt/eathena/bin/)
	$(shell ln -s /opt/eathena/etc/eathena/conf/ /opt/eathena/bin/)
	$(shell ln -s /opt/eathena/etc/eathena/npc/ /opt/eathena/bin/)
	$(shell ln -s /opt/eathena/var/log/eathena/ /opt/eathena/bin/log)

bin-clean:
	$(shell rm /opt/eathena/bin/login-server*)
	$(shell rm /opt/eathena/bin/char-server*)
	$(shell rm /opt/eathena/bin/map-server*)
	$(shell rm /opt/eathena/bin/ladmin)

uninstall:
	bin-clean
	$(shell rm /opt/eathena/bin/save)
	$(shell rm /opt/eathena/bin/db)
	$(shell rm /opt/eathena/bin/conf)
	$(shell rm /opt/eathena/bin/npc)
	$(shell rm /opt/eathena/bin/log)
	$(shell rm -rf /opt/eathena/etc/eathena)
	$(shell rm -rf /opt/eathena/var/log/eathena)
